[tool.poetry]
name = "notifier"
version = "0.1.0"
description = ""
authors = ["Takahashi Katsuyuki <takahashi@naxa.co.jp>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"
slack-sdk = "^3.26.0"
load-dotenv = "^0.1.0"


[tool.poetry.group.dev.dependencies]
black = "^23.11.0"
taskipy = "^1.12.2"
isort = "^5.12.0"
mypy = "^1.7.1"
flake8 = "^6.1.0"
pytest = "^7.4.3"
pytest-cov = "^4.1.0"
pytest-mock = "^3.12.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.taskipy.tasks]
test = "pytest -s -vv --cov=. --cov-branch --cov-report=html"
format = "task format-black && task format-isort"
format-black = "black src tests"
format-isort = "isort src tests"
lint = "task lint-black && task lint-flake8 && task lint-mypy"
lint-flake8 = "flake8 src tests"
lint-mypy = "mypy src tests"
lint-black = "black --check src tests"


[tool.black]
line-length = 100


[tool.isort]
# see: https://pycqa.github.io/isort/docs/configuration/multi_line_output_modes.html
profile = "black"
line_length = 100
import_heading_stdlib = "Standard Library"
import_heading_thirdparty = "Third Party Library"
import_heading_firstparty = "First Party Library"
import_heading_localfolder = "Local Library"
multi_line_output = 3
include_trailing_comma = true


[tool.flake8]
# see: https://flake8.pycqa.org/en/latest/user/options.html#index-of-options
max-line-length = 100
# see: https://flake8.pycqa.org/en/latest/user/error-codes.html
extend-ignore = ["E203", "W503"]
exclude = [".venv", ".git", "__pycache__"]
max-complexity = 10


[tool.mypy]
show_error_context = true
show_column_numbers = true
ignore_missing_imports = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_return_any = true
warn_unused_ignores = true
warn_redundant_casts = true